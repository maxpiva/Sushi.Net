<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <RuntimeIdentifiers>win-x64;win-x86;linux-x64;osx-x64</RuntimeIdentifiers>
    <AssemblyName>Sushi.Net</AssemblyName>
    <ApplicationIcon>sushi.ico</ApplicationIcon>
    <Authors>Máximo Piva</Authors>
    <PackageProjectUrl>https://github.com/maxpiva/Sushi.Net</PackageProjectUrl>
    <RepositoryUrl>https://github.com/maxpiva/Sushi.Net</RepositoryUrl>
    <PackageTags>.net sushi subtitle audio shifter</PackageTags>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <FileVersion>1.0.1.0</FileVersion>
    <Description>Sushi.Net Library
Automatic Subtitle &amp; Audio Shifter
It can shift subtitles based on two different audio streams using pattern matching.
Or it can shift in chunks a foreign/original audio stream to match another foreign/original audio stream using the ambience sound pattern matching.</Description>
    <Copyright>Copyright © 2023 Máximo Piva</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Version>1.0.2</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <Deterministic>True</Deterministic>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <Deterministic>True</Deterministic>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FuzzySharp" Version="2.0.2" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="9.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="9.0.1" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="System.CommandLine.Hosting" Version="0.4.0-alpha.22272.1" />
    <PackageReference Include="System.CommandLine.Rendering" Version="0.4.0-alpha.22272.1" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Sushi.Net.Library\Sushi.Net.Library.csproj" />
  </ItemGroup>
  <!---Open CV Compiled only with Core & ImgProc-->
  <ItemGroup Condition="'$(RuntimeIdentifier)'=='osx-x64' or ('$(Configuration)' == 'Debug' and $([MSBuild]::IsOSPlatform('OSX')))">
    <NativeLibs Include="..\runtimes\osx-x64\native\libOpenCvSharpExtern.dylib" />
    <None Include="@(NativeLibs)">
      <Link>libOpenCvSharpExtern.dylib</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <!--For Other Linux Dist new Open CV Sharp with Core & ImgProc might need to be compiled-->
  <ItemGroup Condition="'$(RuntimeIdentifier)'=='linux-x64' or ('$(Configuration)' == 'Debug' and $([MSBuild]::IsOSPlatform('Linux')))">
    <NativeLibs Include="..\runtimes\ubuntu.16.04-x64\native\libOpenCvSharpExtern.so" />
    <None Include="@(NativeLibs)">
      <Link>libOpenCvSharpExtern.so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)'=='win-x64' or ('$(Configuration)' == 'Debug' and $([MSBuild]::IsOSPlatform('Windows')))">
    <NativeLibs Include="..\runtimes\win-x64\native\OpenCvSharpExtern.dll" />
    <None Include="@(NativeLibs)">
      <Link>OpenCvSharpExtern.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)'=='win-x86'">
    <NativeLibs Include="..\runtimes\win-x86\native\OpenCvSharpExtern.dll" />
    <None Include="@(NativeLibs)">
      <Link>OpenCvSharpExtern.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
	  <RuntimeHostConfigurationOption Include="System.Text.Json.Serialization.EnableSourceGenReflectionFallback" Value="true" />
	  <RuntimeHostConfigurationOption Include="System.Text.Json.JsonSerializer.IsReflectionEnabledByDefault" Value="true" />

  </ItemGroup>
</Project>
